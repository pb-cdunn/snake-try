rule all:
    input: 'output.txt'

rule clean:
    shell: 'rm in\ put_* int\ ermediate_* output.txt'

rule merge:
    input: ancient(dynamic('int ermediate_{n}.txt'))
    output: 'output.txt'
    shell: 'cat {input:q} > {output}'

rule parallel:
    input: i='in put_{n,\d+}.txt'
    output: 'int ermediate_{n}.txt'
    shell: 'cat {input.i:q} > {output:q} && sleep 1 && echo processed >> {output}'

rule split:
    input: '../input.txt'
    output: dynamic('in put_{n}.txt')
    run:
        with open(input[0], 'r') as infile:
            for n, line in enumerate(infile.readlines()):
                with open('in put_{}.txt'.format(n), 'w+') as outfile:
                    outfile.write(line)
