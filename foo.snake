rule all:
    input: 'output.txt'

rule clean:
    shell: 'rm input_* intermediate_* output.txt'

rule merge:
    input: ancient(dynamic('intermediate_{n}.txt'))
    output: 'output.txt'
    shell: 'cat {input} > {output}'

rule parallel:
    input: 'input_{n,\d+}.txt'
    output: 'intermediate_{n}.txt'
    shell: 'cat {input} > {output} && sleep 1 && echo processed >> {output}'

rule split:
    input: 'mapped.json'
    output: dynamic('input_{n}.txt')
    shell: '../symlink_mapped.py --mapped={input} --fn-pattern="input_{{}}.txt"'

rule map:
    input: '../input.txt'
    output: 'mapped.json'
    shell: '../dump_mapped.py --mapped={output} --input={input}'
